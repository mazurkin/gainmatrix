package com.gainmatrix.lib.cache;

import java.util.Collection;
import java.util.Map;
import java.util.Set;

/**
 * Интерфейс определяющий контракт для реализации кэша
 * @param <K> Тип ключа
 * @param <T> Тип элемента в кэше
 */
public interface AbstractCache<K, T> {

    /**
     * Сохранение объекта в кэше
     * @param key Ключ объекта
     * @param object Объект
     */
    void put(K key, T object);

    /**
     * Запрос объекта из кэша по ключу
     * @param key Ключ объекта
     * @return Объект или null, если объект не найден
     */
    T get(K key);

    /**
     * Запрос сразу нескольких объектов из кэша
     * @param keys Коллекция ключей
     * @return Отображение ключ->значение. Если значения нет в кэше, то в результатирующее отображение ключ этого
     * значения может не попасть, т.е. размер результатирующего отображения может быть меньше размера передаваемой
     * коллекции ключей
     */
    Map<K, T> get(Collection<K> keys);

    /**
     * Удаление объекта из кэша по ключу
     * @param key Ключ объекта
     */
    void remove(K key);

    /**
     * Полная очистка кэша
     */
    void clear();

    /**
     * Проверка существования объекта с указанным ключом
     * @param key Ключ объекта
     * @return Существует ли объект в данном кэше
     */
    boolean exists(K key);

    /**
     * Запрос числа элементов в кэше. Операция может быть неэффективной либо вообще не поддерживаться.
     * @return Размер кэша
     * */
    int size();

    /**
     * Запрос списка ключей в кеше. Операция может быть неэффективной либо вообще не поддерживаться.
     * @return Набор ключей
     */
    Set<K> getKeys();

    /**
     * Установка значения только в том случае, если в данный момент в кэше нет значения с таким ключом
     * @param key Ключ объекта
     * @param object Объект
     * @return Возвращает true, если операция была удачной (т.е. объекта с таким ключом в кэше не было)
     */
    boolean add(K key, T object);

    /**
     * Замена значения только в том случае, если в данный момент в каше есть значение с таким ключом
     * @param key Ключ объекта
     * @param object Объект
     * @return Возвращает true, если операция была удачной (т.е. объект с таким ключом в каше был)
     */
    boolean replace(K key, T object);

}
